name: Generate

on:
  pull_request: {}
  push: {}
  release: { types: [published] }
    
jobs:
  generate:
    name: Generate the pack
    runs-on: ubuntu-latest
    steps:
      - name: Get the repo
        uses: actions/checkout@v2
      - name: Generate
        shell: pwsh
        run: 'pwsh .\make.ps1 -verbose 1'
      - name: Upload the generated pack
        uses: actions/upload-artifact@v2
        with:
          name: Bloody Nether Addon for Vanilla Raytraced
          path: .temp/export
          
  publish:
    name: Publish the pack
    runs-on: ubuntu-latest
    if: github.event.action == 'published'
    needs: generate
    steps:      
      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: Bloody Nether Addon for Vanilla Raytraced
          path: .temp/export
      - name: Gets latest created release info
        uses: octokit/request-action@v2.x
        id: get_latest_release
        with:
          route: GET /repos/:repository/releases/latest
          repository: ${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload to Github
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ fromJson(steps.get_latest_release.outputs.data).upload_url }}
          asset_path: '.temp/export/Vanilla Raytraced - Bloody Nether Addon.mcpack'
          asset_name:  Bloody-Nether-Addon-for-Vanilla-Raytraced.${{ fromJson(steps.get_latest_release.outputs.data).tag_name }}.mcpack
          asset_content_type: application/zip